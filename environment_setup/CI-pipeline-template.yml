name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events
  push:
    branches:
    - main
    - development
    ## TODO:
    # For now this CI Action is set to trigger on a push on main and development
    # However, we want this CI Action to run for a pull request event on the main and development branch
    # Change this trigger above such that this Action is triggered at a pull request (for main and development)
    # Hint: use this link for more information on Action triggers
    # Link: https://docs.github.com/en/enterprise-server@3.4/actions/using-workflows/workflow-syntax-for-github-actions#onpull_requestpull_request_targetbranchesbranches-ignore

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "CI"
  CI:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it and sets up Python
      - uses: actions/checkout@v3
      # Sets up python in the ubuntu environment
      - uses: actions/setup-python@v3
        with:
          python-version: '3.7'
          architecture: 'x64'
      # Install pip - you can expand this with additional package installs that you would need for running unit tests (this is not included in this example)
      - run: |
          python -m pip install --upgrade pip==21.3.1

      # Code quality check
      ## TODO: In the next run command first install flake8 and flake8_formatter_junit_xml. Install these packages with "pip install".
      ## TODO: after installing, make sure to run flake by executing "flake8 --exit-zero ." 
      - name: Code quality check
        run: |
          echo "Underneath enter the commands for code quality check (see TODOs)"

      # Archive notebook scripts as artifacts
      # With this action we archive the Data Science scripts as an artifact,
      # which are saved and can be reviewed anytime this is required.
      - name: Archive files
        uses: actions/upload-artifact@v3
        with:
          name: scripts
          path: scripts/
